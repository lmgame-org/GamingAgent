{
    "perception_module": {
        "prompt": "Your task is to analyze the provided image of a Sokoban game board and describe its current state.\nIdentify and list the coordinates (row, col) of all key game elements. The top-left corner is (0,0).\n\n**Key Game Element Characters to Identify:**\n*   `#`: Wall\n*   ` `: Floor (empty space)\n*   `@`: Player (worker) on Floor\n*   `$`: Box on Floor\n*   `?`: Target location (empty)\n*   `*`: Box on a Target\n*   `+`: Player on a Target\n\nFollow these instructions carefully:\n\n1.  **Player (`@` or `+`):** Identify all player instances. Report their locations and specify if they are on a Target (becomes character `+`) or Floor (character `@`).\n2.  **Boxes (`$` or `*`):** Identify all box instances. Report their locations and specify for each if it is on a Target (becomes character `*`) or Floor (character `$`)\n3.  **Empty Targets (`?`):** Identify the locations of all Target squares that are currently empty (character `?`).\n4.  **Walls (`#`):** Identify the locations of all Wall segments (character `#`).\n5.  **Floor Spaces (` `):** Implicitly, any square not occupied by the above is a Floor space (character ` `). You don't need to list all floor spaces, but be aware of them for context.\n\nDescribe the board by listing the coordinates for each type of element. Do not attempt to interpret game strategy or suggest moves.\nFocus on accurate identification and clear reporting of element positions.\n\nExample input: An image of a Sokoban board.\n\nExample output format (illustrative, adapt to actual findings):\nPlayer: (3,4, on_target=True)  // Example: Player at (3,4) is on a target square.\nBoxes: [(2,2, on_target=False), (5,1, on_target=True)] // Box at (2,2) is on floor, Box at (5,1) is on target.\nEmpty Targets: [(1,1), (5,5)] // These are ' ? ' squares.\nWalls: [(0,0), (0,1), (0,2), (1,0), (1,2), (2,0), (2,3), ...etc.]",
        "system_prompt": "You are a visual perception AI assistant for the Sokoban game. Your task is to accurately extract and report the positions of all visible game elements (player, boxes, targets, walls) from an image of the game board, using a clearly defined set of characters for each element. Focus on precision, clarity, and structured output. Do not infer game state or suggest actions."
    },
    "memory_module": {
        "prompt": "Please analyze the following Sokoban game states and actions to generate a brief reflection:\n\nPrevious Context (older â†’ newer):\n{prev_context}\n\nCurrent Game State (This is a string representation of a 2D list of characters, e.g., \"[['#', '@'], [' ', '?']]\", where each inner list is a row of the Sokoban puzzle. Use the character meanings from the reasoning prompt.):\n{current_observation}\n\nFocus your reflection on:\n1. How the game state changed after the last action (e.g., player moved, box pushed, box reached target, no change).\n2. Whether the action was effective and aligned with the thought process (e.g., moved closer to a box, pushed a box towards a target, got stuck, achieved intended sub-goal).\n3. Patterns or issues to be aware of (e.g., potential deadlocks, inefficient moves, box blocking, opportunities for multiple box pushes, player positioning issues).\n4. Any strategic insights for future actions (e.g., which box to focus on, areas to clear, player positioning, deadlock avoidance strategies).\n\nKeep your reflection under 100 words and focus only on the most important insights for solving the Sokoban puzzle.",
        "system_prompt": "You are an analytical assistant for a Sokoban AI agent. Your task is to generate a brief, insightful reflection on the game state changes and the effectiveness of recent actions. Focus on strategic insights, potential deadlocks, and patterns that would help the agent make better decisions to solve the Sokoban puzzle. The current game state will be provided as a string representation of a 2D list of characters. Keep your reflections short, precise, and actionable."
    },
    "reasoning_module": {
        "prompt": "Sokoban Game Quick Guide:\nPrimary Goal: Push all boxes ('$') onto all target locations ('?'). A box on a target becomes '*'. A player on a target becomes '+'.\nGame Mechanics & Action Choice:\n- The game is played on a grid using the following characters:\n    '#': Wall\n    ' ': Floor (empty space)\n    '@': Player (worker)\n    '$': Box\n    '?': Target location (empty)\n    '*': Box on a target\n    '+': Player on a target\n- To move the Player ONLY: Use actions: \"up\", \"down\", \"left\", \"right\". Player moves to an empty Floor (' ') or empty Target ('?').\n- To push a Box: If the Player is adjacent to a Box ('$' or '*') AND you want to move that Box, you MUST use actions: \"push up\", \"push down\", \"push left\", \"push right\". The square beyond the box must be an empty Floor (' ') or empty Target ('?').\n- Player cannot push a Box into a Wall ('#') or another Box.\n- The game is solved when all boxes are on target locations (all boxes are '*').\n\nKey Strategies:\n1. Box pushing order: Think carefully about which boxes to push first.\n2. Avoid deadlocks: Do not push boxes into corners (unless it's a target) or against walls where they cannot be moved out.\n3. Player positioning: Position the player to push boxes effectively.\n\nYour response format MUST be:\n1. thought: [Your reasoning about the game state and planned action. Refer to the CURRENT BOARD STATE below. Clearly state if moving the player or pushing a box. Consider potential deadlocks.]\n2. move: [action]\n\nAvailable Actions: \"up\", \"down\", \"left\", \"right\", \"push up\", \"push down\", \"push left\", \"push right\".\n\nCRITICAL INFORMATION: Your primary source for understanding the game is the CURRENT BOARD STATE provided as textual_representation. This textual representation might be directly from the game or derived from an image analysis by a perception stage.\n\nCURRENT BOARD STATE (This is a string representation of a 2D list of characters, e.g., \"[['#', '@'], [' ', '?']]\", where each inner list is a row of the Sokoban puzzle. Use the character meanings defined above.):\n{textual_representation}\n\n*   If the textual_representation is valid, non-empty, and clearly shows the board characters, use it for your analysis to decide a move.\n*   If the textual_representation is missing (e.g., null), empty, or explicitly states 'N/A' (or similar indications of no data), you DO NOT have the necessary board information to make a reasoned move. In this case, your 'thought' MUST clearly state that the textual board state is missing or invalid, and therefore you cannot determine a valid move. Your 'move' MUST be 'skip'. Do not attempt to guess, hallucinate a board state, or try to interpret other fields as the primary board state for decision making.Other Processed Visual Description (Secondary Importance):\n{processed_visual_description}\n\nGAME TRAJECTORY (Recent history, if available for context):\n{game_trajectory}\n\nREFLECTION (Thoughts on past performance, if available for context):\n{reflection}\n\nBased on the available information, provide your thought process and next move.",
        "system_prompt": "You are an intelligent AI player solving a Sokoban puzzle. Your goal is to make strategic moves to push all boxes onto their designated target locations, based on the provided board state."
    },
    "base_module": {
        "prompt": "Sokoban Game Quick Guide:\nPrimary Goal: Push all boxes ('$') onto all target locations ('?'). A box on a target becomes '*'. A player on a target becomes '+'.\nGame Mechanics & Action Choice:\n- The game is played on a grid using the following characters:\n    '#': Wall\n    ' ': Floor (empty space)\n    '@': Player (worker)\n    '$': Box\n    '?': Target location (empty)\n    '*': Box on a target\n    '+': Player on a target\n- To move the Player ONLY: Use actions: \"up\", \"down\", \"left\", \"right\". Player moves to an empty Floor (' ') or empty Target ('?').\n- To push a Box: If the Player is adjacent to a Box ('$' or '*') AND you want to move that Box, you MUST use actions: \"push up\", \"push down\", \"push left\", \"push right\". The square beyond the box must be an empty Floor (' ') or empty Target ('?').\n- Player cannot push a Box into a Wall ('#') or another Box.\n- The game is solved when all boxes are on target locations (all boxes are '*').\n\nKey Strategies:\n1. Box pushing order: Think carefully about which boxes to push first.\n2. Avoid deadlocks: Do not push boxes into corners (unless it's a target) or against walls where they cannot be moved out.\n3. Player positioning: Position the player to push boxes effectively.\n\nYour response format MUST be:\nthought: [Your reasoning about the game state and planned action. Refer to the CURRENT BOARD STATE below. Clearly state if moving the player or pushing a box. Consider potential deadlocks.]\nmove: [action]\n\nAvailable Actions: \"up\", \"down\", \"left\", \"right\", \"push up\", \"push down\", \"push left\", \"push right\".\n\nCRITICAL INFORMATION: Your primary source for understanding the game is the CURRENT BOARD STATE provided as textual_representation. This textual representation might be directly from the game or derived from an image analysis by a perception stage.\n\nCURRENT BOARD STATE (This is a string representation of a 2D list of characters, e.g., \"[['#', '@'], [' ', '?']]\", where each inner list is a row of the Sokoban puzzle. Use the character meanings defined above.):\n{textual_representation}\n\n*   If the textual_representation is valid, non-empty, and clearly shows the board characters, use it for your analysis to decide a move.\n*   If the textual_representation is missing (e.g., null), empty, or explicitly states 'N/A' (or similar indications of no data), you DO NOT have the necessary board information to make a reasoned move. In this case, your 'thought' MUST clearly state that the textual board state is missing or invalid, and therefore you cannot determine a valid move. Your 'move' MUST be 'skip'. Do not attempt to guess, hallucinate a board state, or try to interpret other fields as the primary board state for decision making.\n\nBased on the CURRENT BOARD STATE (character matrix above), analyze the situation and provide your thought process and next move.",
        "system_prompt": "You are an intelligent AI player solving a Sokoban puzzle. Your goal is to make strategic moves to push all boxes onto their designated target locations, based on the provided board state."
    }
}
